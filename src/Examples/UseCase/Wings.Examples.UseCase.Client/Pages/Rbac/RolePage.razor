@namespace Wings.Examples.UseCase.Client.Pages
@page "/rbac/role"
@inject HttpClient HttpClient
@inject ModalService _modalService
@if(SelectedRole!=null)
{
    <h1>true</h1>
    @(System.Text.Json.JsonSerializer.Serialize(SelectedRole))
}
<DataSourceManager TModel="RoleListDvo" @ref="DataSource"></DataSourceManager>
<AntTableView TModel="RoleListDvo" @ref="table" @bind-SelectedRow="SelectedRole">
    <ToolbarTemplate><Button OnClick="OnCreate" Size="small" Type="primary">新增</Button></ToolbarTemplate>
    <ActionColumnTemplate>
        <Space>
            <SpaceItem>
                <Space>
                    <SpaceItem><Button Size="small" OnClick="()=>LoadRoleMenu(context)">详情</Button></SpaceItem>
                    <SpaceItem><Button Size="small" OnClick="()=>OnEdit(context)">编辑</Button></SpaceItem>
                    <SpaceItem><Button Size="small" Danger OnClick="()=>OpenDeleteConfirmModal(context)">删除</Button></SpaceItem>
                </Space>
            </SpaceItem>
        </Space>
    </ActionColumnTemplate>
</AntTableView>

@* 详情tabs面板 *@
@if (SelectedData != null && RoleMenus != null && RolePermisssions != null)
{
    <Tabs>
        <TabPane Key="1">
            <Tab>角色菜单</Tab>
            <ChildContent>
                <AntTreeView DataListTItem="RoleMenus" TModel="MenuListDvo"></AntTreeView>
            </ChildContent>
        </TabPane>
        <TabPane Key="2">
            <Tab>角色权限</Tab>
            <ChildContent>
                <AntTreeView TModel="PermissionListDvo" DataListTItem="RolePermisssions"></AntTreeView>
            </ChildContent>
        </TabPane>
    </Tabs>

}

@if (editData != null)
{

    <Modal Visible="editData!=null" Width="900" Title="编辑角色" OnOk="HandleOk" OnCancel="HandleCancel">
        <Tabs>
            <TabPane Key="1">
                <Tab>基本信息</Tab>
                <ChildContent>
                    <AntDynamicForm TModel="RoleListDvo" Value="editData"></AntDynamicForm>
                </ChildContent>
            </TabPane>
            <TabPane Key="2">
                <Tab>角色菜单</Tab>
                <ChildContent>
                    <AntTreeView Checkable="true" @bind-CheckedNodes="editData.Menus" TModel="MenuListDvo"></AntTreeView>
                </ChildContent>
            </TabPane>
            <TabPane Key="3">
                <Tab>角色权限</Tab>
                <ChildContent>
                    <AntTreeView Checkable="true" @bind-CheckedNodes="editData.Permissions" TModel="PermissionListDvo"></AntTreeView>
                </ChildContent>
            </TabPane>
        </Tabs>

    </Modal>
}

@*  *@
@code{
  public RoleListDvo SelectedRole { get; set; }
    AntTableView<RoleListDvo> table { get; set; }
    RoleListDvo SelectedData;
    RoleListDvo editData;
    List<MenuListDvo> RoleMenus { get; set; }
    List<PermissionListDvo> RolePermisssions { get; set; }
    public DataSourceManager<RoleListDvo> DataSource { get; set; }
    public void LoadRoleMenu(RoleListDvo data)
    {
        SelectedData = data;
        RoleMenus = null;
        RolePermisssions = null;
        if (data != null)
        {
            RoleMenus = data.Menus;
            RolePermisssions = data.Permissions;
            SelectedData = data;
        }
        else
        {
            SelectedData = null;
        }
        StateHasChanged();

    }

    public void OnEdit(RoleListDvo data)
    {
        editData = data;

    }

    public void OnCreate()
    {
        editData = new RoleListDvo();
    }

    public async Task HandleOk()
    {
        if (editData.Id != 0)
        {
            await DataSource.Update(editData);
        }
        else
        {
            await DataSource.Insert(editData);
        }

        editData = null;
        await table.Load();
    }
    public async Task HandleCancel()
    {
        editData = null;
    }

    public void OpenDeleteConfirmModal(RoleListDvo data)
    {
        _modalService.Confirm(new ConfirmOptions()
        {
            Title = "确定删除该条记录?",
            OnOk = async (e) =>
            {
                await DataSource.Delete(data);
                await table.Load();
            },
        });
    }

}