@namespace Wings.Examples.UseCase.Client.Pages
@page "/developer/permission"
@inject ModalService _modalService
@using AutoMapper
@inject IMapper IMapper

<DataSourceManager TModel="PermissionListDvo" @ref="DataSource"></DataSourceManager>
<Row Gutter="16">
    <Col Span="8">

    <AntTreeView TModel="PermissionListDvo" @bind-SelectedData="SelectedData" @ref="tree"></AntTreeView>


    </Col>
    <Col Span="12" Push="2">
    @if (SelectedData != null)
    {
        <div>
            <Button Type="primary" Size="small" OnClick="() => createForm.ShowModal(new PermissionListDvo { ParentId = SelectedData.ParentId })">添加同级</Button>
            <Button Type="primary" Size="small" OnClick="() => createForm.ShowModal(new PermissionListDvo { ParentId = SelectedData.Id })">添加下级</Button>
            <Button Type="primary" Size="small" OnClick="() => updateForm.ShowModal(SelectedData)">编辑</Button>
            <Button Type="danger" Size="small" OnClick="OpenDeleteConfirmModal" Disabled="SelectedData == null">删除</Button>
        </div>
        <AntDetailView TModel="PermissionListDvo" Value="SelectedData"> </AntDetailView>

        <AntDynamicForm TModel="PermissionListDvo" mode="modal"  @ref="createForm" OnSubmit="async () => {await createForm.InsertAsync();await tree.Refresh(); }"></AntDynamicForm>
        <AntDynamicForm TModel="PermissionListDvo" mode="modal" @ref="updateForm" OnSubmit="async () =>{await updateForm.UpdateAsync();await tree.Refresh(); }"></AntDynamicForm>
    }
    </Col>
</Row>
@code {
    public PermissionListDvo SelectedData;
    public AntTreeView<PermissionListDvo> tree;
    public AntDynamicForm<PermissionListDvo> createForm;
    public AntDynamicForm<PermissionListDvo> updateForm;
    public DataSourceManager<PermissionListDvo> DataSource;

    public void OpenDeleteConfirmModal()
    {
        _modalService.Confirm(new ConfirmOptions()
        {
            Title = "确定删除该条记录?",
            OnOk = async (e) =>
            {
                await DataSource.Delete(SelectedData);
                await tree.Refresh();
            },
            OnCancel = (e) => null
        });
    }
}
