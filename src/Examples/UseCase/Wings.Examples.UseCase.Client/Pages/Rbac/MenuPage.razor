@page "/rbac/menu"
@namespace Wings.Examples.UseCase.Client.Pages
@using AutoMapper;
@inject IMapper IMapper
@inject ModalService _modalService
@using System.Text.Json

<DataSourceManager  TModel="MenuListDvo" @ref="DataSource"></DataSourceManager>
<Row Gutter="16">
    <Col Span="8">
    <AntTreeView TModel="MenuListDvo" @bind-SelectedData="SelectedData" @ref="tree"></AntTreeView>

  

    </Col>
    <Col Span="12" Push="2">
    @if (SelectedData != null)
    {
        <div>
            <Button Type="primary" Size="small" OnClick="() => createForm.ShowModal(new MenuCreateDvo { ParentId = SelectedData.ParentId })">添加同级</Button>
            <Button Type="primary" Size="small" OnClick="() => createForm.ShowModal(new MenuCreateDvo { ParentId = SelectedData.Id })">添加下级</Button>
            <Button Type="primary" Size="small" OnClick="() => updateForm.ShowModal(IMapper.Map<MenuListDvo,MenuCreateDvo>(SelectedData))">编辑</Button>
            <Button Type="danger" Size="small" OnClick="OpenDeleteConfirmModal" Disabled="SelectedData == null">删除</Button>
        </div>
        <AntDetailView TModel="MenuListDvo" Value="SelectedData"> </AntDetailView>

        <AntDynamicForm TModel="MenuCreateDvo" mode="modal" @ref="createForm" OnSubmit="async () => {await createForm.InsertAsync();await tree.Refresh(); }"></AntDynamicForm>
        <AntDynamicForm TModel="MenuCreateDvo" mode="modal" @ref="updateForm" OnSubmit="async () =>{await updateForm.UpdateAsync();await tree.Refresh(); }"></AntDynamicForm>
    }
        </Col>
       
    </Row>
    @code {
        public AntTreeView<MenuListDvo> tree;
        public MenuListDvo SelectedData { get; set; }
        AntDynamicForm<MenuCreateDvo> createForm;
        AntDynamicForm<MenuCreateDvo> updateForm;
        public DataSourceManager<MenuListDvo> DataSource { get; set; }
        public void OpenDeleteConfirmModal()
        {
            _modalService.Confirm(new ConfirmOptions()
            {
                Title = "确定删除该条记录?",
                OnOk = async (e) =>
                {
                    await DataSource.Delete(SelectedData);
                    await tree.Refresh();
                },
                OnCancel = (e) => null
            });
        }

    }
