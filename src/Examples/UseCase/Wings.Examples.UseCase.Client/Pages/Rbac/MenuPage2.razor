
@page "/rbac/menu2"
@namespace Wings.Examples.UseCase.Client.Pages
@inject HttpClient HttpClient
@inject ModalService _modalService
@inject IMapper mapper

<DataSourceManager TModel="MenuListDvo" @ref="DataSource"> </DataSourceManager>

<Row Gutter="16">
    <Col Span="8">
    <AntTreeView TModel="MenuListDvo" @bind-SelectedData="SelectedData" @ref="table"></AntTreeView>

    </Col>
    <Col Span="14" Push="1">

    @if (SelectedData != null)
    {
        <div>
            <Button Type="primary" Size="small" OnClick="() => createForm.ShowModal(new MenuCreateDvo { ParentId = SelectedData.ParentId })">添加同级</Button>
            <Button Type="primary" Size="small" OnClick="() => createForm.ShowModal(new MenuCreateDvo { ParentId = SelectedData.Id })">添加下级</Button>
            <Button Type="primary" Size="small" OnClick="() => updateForm.ShowModal(mapper.Map<MenuListDvo,MenuUpdateDvo>(SelectedData))">编辑</Button>
            <Button Type="danger" Size="small" OnClick="OpenDeleteConfirmModal" Disabled="SelectedData == null">删除</Button>
        </div>

        <Tabs>
            <TabPane Key="1">
                <Tab>基本信息</Tab>
                <ChildContent>
                    <AntDetailView TModel="MenuListDvo" Value="mapper.Map<MenuListDvo,MenuListDvo>(SelectedData)"></AntDetailView>
                </ChildContent>
            </TabPane>



        </Tabs>



    }
    </Col>
</Row>

<AntDynamicForm mode="modal" TModel="MenuCreateDvo" DefaultFieldSpan="6" @ref="createForm" OnSubmit="async () =>{await createForm.InsertAsync();await table.Load(); }"></AntDynamicForm>
<AntDynamicForm mode="modal" TModel="MenuUpdateDvo" DefaultFieldSpan="6" @ref="updateForm" OnSubmit="async () =>{await updateForm.InsertAsync();await table.Load(); }"></AntDynamicForm>




@code {
    public AntTreeView<MenuListDvo> table { get; set; }
    public MenuListDvo SelectedData { get; set; }
    public MenuCreateDvo CreateData { get; set; }
    public MenuUpdateDvo EditData { get; set; }
    AntDynamicForm<MenuCreateDvo> createForm;
    AntDynamicForm<MenuUpdateDvo> updateForm;
    public DataSourceManager<MenuListDvo> DataSource { get; set; }
    public void OpenDeleteConfirmModal()
    {
        _modalService.Confirm(new ConfirmOptions()
        {
            Title = "确定删除该条记录 ? ",
            OnOk = async (e) =>
            {
                await DataSource.Delete(SelectedData);
                await table.Load();
            },
            OnCancel = (e) => null
        });
    }



    public async Task SelectData(MenuListDvo data)
    {


        SelectedData = null;
        await Task.Run(async () =>
         {
             await Task.Delay(20);
             SelectedData = data;
             StateHasChanged();
         });



    }



}

